{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2","program":"/Users/yibopan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rand_core","--edition=2018","/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"getrandom\"","--cfg","feature=\"std\"","-C","metadata=0dcdef3da8c416a6","-C","extra-filename=-0dcdef3da8c416a6","--out-dir","/Users/yibopan/Dev/CS496/lit-coin/target/rls/debug/deps","-L","dependency=/Users/yibopan/Dev/CS496/lit-coin/target/rls/debug/deps","--extern","getrandom=/Users/yibopan/Dev/CS496/lit-coin/target/rls/debug/deps/libgetrandom-104208e9ca7d75da.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/yibopan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/yibopan/Dev/CS496/lit-coin/target/rls/debug/deps/librand_core-0dcdef3da8c416a6.rmeta"},"prelude":{"crate_id":{"name":"rand_core","disambiguator":[6057029032176328161,11142735171429320119]},"crate_root":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src","external_crates":[{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16348493018826829365,4805211970644213659]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8279628881989909837,14733107812838978533]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17646096667663791084,12272231044852301253]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[16125995874279485955,8748768413821387129]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4565760717972533866,4473905522437311200]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7551666766599439458,2782226154556471377]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11632633256475535999,13776501019579249840]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4897607742433192731,640426136460610934]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15534826887064733014,5612939005974764181]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1175232612468424282,18163295741730709113]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15721596154046543409,2249662874474360977]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7768511099061914688,4128344505014859734]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15048206832849992118,3387758009953732431]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13751153714556823430,9887373550715096268]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[13432701172845674020,17161827416142858739]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","num":16,"id":{"name":"getrandom","disambiguator":[1107073801720726189,8176234547747440701]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","num":17,"id":{"name":"cfg_if","disambiguator":[16603922931345047291,6140471091336790449]}},{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","num":18,"id":{"name":"libc","disambiguator":[8137107932025317833,11702490339730700308]}}],"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":408,"byte_end":19580,"line_start":10,"line_end":497,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1770,"byte_end":1775,"line_start":48,"line_end":48,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1819,"byte_end":1824,"line_start":49,"line_end":49,"column_start":43,"column_end":48},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1819,"byte_end":1824,"line_start":49,"line_end":49,"column_start":43,"column_end":48},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":10}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":408,"byte_end":19580,"line_start":10,"line_end":497,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":215},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":221},{"krate":0,"index":11},{"krate":0,"index":73},{"krate":0,"index":104},{"krate":0,"index":123},{"krate":0,"index":127},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":157},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":175}],"decl_id":null,"docs":" Random number generation traits","sig":null,"attributes":[{"value":"/ Random number generation traits","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":408,"byte_end":443,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":444,"byte_end":447,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate is mainly of interest to crates publishing implementations of","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":448,"byte_end":524,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ [`RngCore`]. Other users are encouraged to use the [`rand`] crate instead","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":525,"byte_end":602,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ which re-exports the main traits and error types.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":603,"byte_end":656,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":657,"byte_end":660,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`RngCore`] is the core trait implemented by algorithmic pseudo-random number","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":661,"byte_end":742,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ generators and external random-number sources.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":743,"byte_end":793,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":794,"byte_end":797,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`SeedableRng`] is an extension trait for construction from fixed seeds and","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":798,"byte_end":877,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ other random number generators.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":878,"byte_end":913,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":914,"byte_end":917,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Error`] is provided for error-handling. It is safe to use in `no_std`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":918,"byte_end":993,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ environments.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":994,"byte_end":1011,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The [`impls`] and [`le`] sub-modules include a few small functions to assist","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1016,"byte_end":1096,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ implementation of [`RngCore`].","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1097,"byte_end":1131,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1132,"byte_end":1135,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`rand`]: https://docs.rs/rand","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1136,"byte_end":1170,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1386,"byte_end":1408,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1409,"byte_end":1448,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"no_std","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1550,"byte_end":1560,"line_start":39,"line_end":39,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"block","qualname":"::block","value":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":35},{"krate":0,"index":42},{"krate":0,"index":185},{"krate":0,"index":191},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":71}],"decl_id":null,"docs":" The `BlockRngCore` trait and implementation helpers","sig":null,"attributes":[{"value":"/ The `BlockRngCore` trait and implementation helpers","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":19938,"byte_end":19993,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":19994,"byte_end":19997,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The [`BlockRngCore`] trait exists to assist in the implementation of RNGs","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":19998,"byte_end":20075,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ which generate a block of data in a cache instead of returning generated","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20076,"byte_end":20152,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ values directly.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20153,"byte_end":20173,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20174,"byte_end":20177,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Usage of this trait is optional, but provides two advantages:","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20178,"byte_end":20243,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/ implementations only need to concern themselves with generation of the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20244,"byte_end":20318,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ block, not the various [`RngCore`] methods (especially [`fill_bytes`], where","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20319,"byte_end":20399,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the optimal implementations are not trivial), and this allows","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20400,"byte_end":20465,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ `ReseedingRng` (see [`rand`](https://docs.rs/rand) crate) perform periodic","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20466,"byte_end":20544,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ reseeding with very low overhead.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20545,"byte_end":20582,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20583,"byte_end":20586,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20587,"byte_end":20600,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20601,"byte_end":20604,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20605,"byte_end":20618,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use rand_core::{RngCore, SeedableRng};","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20619,"byte_end":20661,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/ use rand_core::block::{BlockRngCore, BlockRng};","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20662,"byte_end":20713,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20714,"byte_end":20717,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ struct MyRngCore;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20718,"byte_end":20739,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20740,"byte_end":20743,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl BlockRngCore for MyRngCore {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20744,"byte_end":20781,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/     type Item = u32;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20782,"byte_end":20806,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/     type Results = [u32; 16];","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20807,"byte_end":20840,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20841,"byte_end":20844,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     fn generate(&mut self, results: &mut Self::Results) {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20845,"byte_end":20906,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/         unimplemented!()","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20907,"byte_end":20935,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20936,"byte_end":20945,"line_start":36,"line_end":36,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20946,"byte_end":20951,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20952,"byte_end":20955,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ impl SeedableRng for MyRngCore {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20956,"byte_end":20992,"line_start":39,"line_end":39,"column_start":1,"column_end":37}},{"value":"/     type Seed = [u8; 32];","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":20993,"byte_end":21022,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/     fn from_seed(seed: Self::Seed) -> Self {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21023,"byte_end":21071,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/         unimplemented!()","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21072,"byte_end":21100,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21101,"byte_end":21110,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21111,"byte_end":21116,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21117,"byte_end":21120,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // optionally, also implement CryptoRng for MyRngCore","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21121,"byte_end":21178,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21179,"byte_end":21182,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // Final RNG.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21183,"byte_end":21200,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ let mut rng = BlockRng::<MyRngCore>::seed_from_u64(0);","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21201,"byte_end":21259,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/ println!(\"First value: {}\", rng.next_u32());","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21260,"byte_end":21308,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21309,"byte_end":21316,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21317,"byte_end":21320,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`BlockRngCore`]: crate::block::BlockRngCore","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21321,"byte_end":21369,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"/ [`fill_bytes`]: RngCore::fill_bytes","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21370,"byte_end":21409,"line_start":54,"line_end":54,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21904,"byte_end":21916,"line_start":68,"line_end":68,"column_start":11,"column_end":23},"name":"BlockRngCore","qualname":"::block::BlockRngCore","value":"BlockRngCore","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" A trait for RNGs which do not generate random numbers individually, but in\n blocks (typically `[u32; N]`). This technique is commonly used by\n cryptographic RNGs to improve performance.","sig":null,"attributes":[{"value":"/ A trait for RNGs which do not generate random numbers individually, but in","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21632,"byte_end":21710,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ blocks (typically `[u32; N]`). This technique is commonly used by","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21711,"byte_end":21780,"line_start":64,"line_end":64,"column_start":1,"column_end":70}},{"value":"/ cryptographic RNGs to improve performance.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21781,"byte_end":21827,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21828,"byte_end":21831,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ See the [module][crate::block] documentation for details.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21832,"byte_end":21893,"line_start":67,"line_end":67,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21970,"byte_end":21974,"line_start":70,"line_end":70,"column_start":10,"column_end":14},"name":"Item","qualname":"::block::BlockRngCore::Item","value":"type Item;","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Results element type, e.g. `u32`.\n","sig":null,"attributes":[{"value":"/ Results element type, e.g. `u32`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21923,"byte_end":21960,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22131,"byte_end":22138,"line_start":74,"line_end":74,"column_start":10,"column_end":17},"name":"Results","qualname":"::block::BlockRngCore::Results","value":"type Results: AsRef<[Self::Item]> + AsMut<[Self::Item]> + Default;","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Results type. This is the 'block' an RNG implementing `BlockRngCore`\n generates, which will usually be an array like `[u32; 16]`.\n","sig":null,"attributes":[{"value":"/ Results type. This is the 'block' an RNG implementing `BlockRngCore`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":21981,"byte_end":22053,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ generates, which will usually be an array like `[u32; 16]`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22058,"byte_end":22121,"line_start":73,"line_end":73,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22242,"byte_end":22250,"line_start":77,"line_end":77,"column_start":8,"column_end":16},"name":"generate","qualname":"::block::BlockRngCore::generate","value":"pub fn generate(&mut Self, &mut Self::Results)","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Generate a new block of results.\n","sig":null,"attributes":[{"value":"/ Generate a new block of results.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22198,"byte_end":22234,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":177},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24268,"byte_end":24276,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"BlockRng","qualname":"::block::BlockRng","value":"BlockRng { core }","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" A wrapper type implementing [`RngCore`] for some type implementing\n [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement\n a full RNG from just a `generate` function.","sig":null,"attributes":[{"value":"/ A wrapper type implementing [`RngCore`] for some type implementing","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22295,"byte_end":22365,"line_start":80,"line_end":80,"column_start":1,"column_end":71}},{"value":"/ [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22366,"byte_end":22446,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/ a full RNG from just a `generate` function.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22447,"byte_end":22494,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22495,"byte_end":22498,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The `core` field may be accessed directly but the results buffer may not.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22499,"byte_end":22576,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ PRNG implementations can simply use a type alias","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22577,"byte_end":22629,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/ (`pub type MyRng = BlockRng<MyRngCore>;`) but might prefer to use a","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22630,"byte_end":22701,"line_start":86,"line_end":86,"column_start":1,"column_end":72}},{"value":"/ wrapper type (`pub struct MyRng(BlockRng<MyRngCore>);`); the latter must","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22702,"byte_end":22778,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ re-implement `RngCore` but hides the implementation details and allows","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22779,"byte_end":22853,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ extra functionality to be defined on the RNG","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22854,"byte_end":22902,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"/ (e.g. `impl MyRng { fn set_stream(...){...} }`).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22903,"byte_end":22955,"line_start":90,"line_end":90,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22956,"byte_end":22959,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ `BlockRng` has heavily optimized implementations of the [`RngCore`] methods","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":22960,"byte_end":23039,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ reading values from the results buffer, as well as","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23040,"byte_end":23094,"line_start":93,"line_end":93,"column_start":1,"column_end":55}},{"value":"/ calling [`BlockRngCore::generate`] directly on the output array when","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23095,"byte_end":23167,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/ [`fill_bytes`] / [`try_fill_bytes`] is called on a large array. These methods","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23168,"byte_end":23249,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ also handle the bookkeeping of when to generate a new batch of values.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23250,"byte_end":23324,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23325,"byte_end":23328,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ No whole generated `u32` values are thown away and all values are consumed","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23329,"byte_end":23407,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ in-order. [`next_u32`] simply takes the next available `u32` value.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23408,"byte_end":23479,"line_start":99,"line_end":99,"column_start":1,"column_end":72}},{"value":"/ [`next_u64`] is implemented by combining two `u32` values, least","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23480,"byte_end":23548,"line_start":100,"line_end":100,"column_start":1,"column_end":69}},{"value":"/ significant first. [`fill_bytes`] and [`try_fill_bytes`] consume a whole","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23549,"byte_end":23625,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/ number of `u32` values, converting each `u32` to a byte slice in","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23626,"byte_end":23694,"line_start":102,"line_end":102,"column_start":1,"column_end":69}},{"value":"/ little-endian order. If the requested byte length is not a multiple of 4,","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23695,"byte_end":23772,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ some bytes will be discarded.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23773,"byte_end":23806,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23807,"byte_end":23810,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ See also [`BlockRng64`] which uses `u64` array buffers. Currently there is","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23811,"byte_end":23889,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ no direct support for other buffer types.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23890,"byte_end":23935,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23936,"byte_end":23939,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ For easy initialization `BlockRng` also implements [`SeedableRng`].","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":23940,"byte_end":24011,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24012,"byte_end":24015,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`next_u32`]: RngCore::next_u32","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24016,"byte_end":24051,"line_start":111,"line_end":111,"column_start":1,"column_end":36}},{"value":"/ [`next_u64`]: RngCore::next_u64","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24052,"byte_end":24087,"line_start":112,"line_end":112,"column_start":1,"column_end":36}},{"value":"/ [`fill_bytes`]: RngCore::fill_bytes","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24088,"byte_end":24127,"line_start":113,"line_end":113,"column_start":1,"column_end":40}},{"value":"/ [`try_fill_bytes`]: RngCore::try_fill_bytes","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24128,"byte_end":24175,"line_start":114,"line_end":114,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":181},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24430,"byte_end":24434,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"core","qualname":"::block::BlockRng::core","value":"R","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" The *core* part of the RNG, implementing the `generate` function.\n","sig":null,"attributes":[{"value":"/ The *core* part of the RNG, implementing the `generate` function.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24352,"byte_end":24421,"line_start":120,"line_end":120,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25048,"byte_end":25051,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<BlockRng<R>>::new","value":"pub fn new(R) -> BlockRng<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BlockRng` from an existing RNG implementing\n `BlockRngCore`. Results will be generated on first use.\n","sig":null,"attributes":[{"value":"/ Create a new `BlockRng` from an existing RNG implementing","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24897,"byte_end":24958,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/ `BlockRngCore`. Results will be generated on first use.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24963,"byte_end":25022,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25027,"byte_end":25036,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25527,"byte_end":25532,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"index","qualname":"<BlockRng<R>>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the index into the result buffer.","sig":null,"attributes":[{"value":"/ Get the index into the result buffer.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25272,"byte_end":25313,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25318,"byte_end":25321,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ If this is equal to or larger than the size of the result buffer then","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25326,"byte_end":25399,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ the buffer is \"empty\" and `generate()` must be called to produce new","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25404,"byte_end":25476,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/ results.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25481,"byte_end":25493,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25498,"byte_end":25515,"line_start":153,"line_end":153,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25723,"byte_end":25728,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"reset","qualname":"<BlockRng<R>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the number of available results.\n This will force a new set of results to be generated on next use.\n","sig":null,"attributes":[{"value":"/ Reset the number of available results.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25581,"byte_end":25623,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/ This will force a new set of results to be generated on next use.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25628,"byte_end":25697,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25702,"byte_end":25711,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25921,"byte_end":25937,"line_start":168,"line_end":168,"column_start":12,"column_end":28},"name":"generate_and_set","qualname":"<BlockRng<R>>::generate_and_set","value":"pub fn generate_and_set(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Generate a new set of results immediately, setting the index to the\n given value.\n","sig":null,"attributes":[{"value":"/ Generate a new set of results immediately, setting the index to the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25803,"byte_end":25874,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/ given value.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25879,"byte_end":25895,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":25900,"byte_end":25909,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29561,"byte_end":29571,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"BlockRng64","qualname":"::block::BlockRng64","value":"BlockRng64 { core }","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" A wrapper type implementing [`RngCore`] for some type implementing\n [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement\n a full RNG from just a `generate` function.","sig":null,"attributes":[{"value":"/ A wrapper type implementing [`RngCore`] for some type implementing","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28364,"byte_end":28434,"line_start":256,"line_end":256,"column_start":1,"column_end":71}},{"value":"/ [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28435,"byte_end":28515,"line_start":257,"line_end":257,"column_start":1,"column_end":81}},{"value":"/ a full RNG from just a `generate` function.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28516,"byte_end":28563,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28564,"byte_end":28567,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`BlockRng`], but specialized for algorithms that operate","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28568,"byte_end":28648,"line_start":260,"line_end":260,"column_start":1,"column_end":81}},{"value":"/ on `u64` values.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28649,"byte_end":28669,"line_start":261,"line_end":261,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28670,"byte_end":28673,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ No whole generated `u64` values are thrown away and all values are consumed","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28674,"byte_end":28753,"line_start":263,"line_end":263,"column_start":1,"column_end":80}},{"value":"/ in-order. [`next_u64`] simply takes the next available `u64` value.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28754,"byte_end":28825,"line_start":264,"line_end":264,"column_start":1,"column_end":72}},{"value":"/ [`next_u32`] is however a bit special: half of a `u64` is consumed, leaving","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28826,"byte_end":28905,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ the other half in the buffer. If the next function called is [`next_u32`]","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28906,"byte_end":28983,"line_start":266,"line_end":266,"column_start":1,"column_end":78}},{"value":"/ then the other half is then consumed, however both [`next_u64`] and","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":28984,"byte_end":29055,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/ [`fill_bytes`] discard the rest of any half-consumed `u64`s when called.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29056,"byte_end":29132,"line_start":268,"line_end":268,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29133,"byte_end":29136,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`fill_bytes`] and [`try_fill_bytes`] consume a whole number of `u64`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29137,"byte_end":29210,"line_start":270,"line_end":270,"column_start":1,"column_end":74}},{"value":"/ values. If the requested length is not a multiple of 8, some bytes will be","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29211,"byte_end":29289,"line_start":271,"line_end":271,"column_start":1,"column_end":79}},{"value":"/ discarded.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29290,"byte_end":29304,"line_start":272,"line_end":272,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29305,"byte_end":29308,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ [`next_u32`]: RngCore::next_u32","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29309,"byte_end":29344,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/ [`next_u64`]: RngCore::next_u64","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29345,"byte_end":29380,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/ [`fill_bytes`]: RngCore::fill_bytes","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29381,"byte_end":29420,"line_start":276,"line_end":276,"column_start":1,"column_end":40}},{"value":"/ [`try_fill_bytes`]: RngCore::try_fill_bytes","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29421,"byte_end":29468,"line_start":277,"line_end":277,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":190},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29798,"byte_end":29802,"line_start":285,"line_end":285,"column_start":9,"column_end":13},"name":"core","qualname":"::block::BlockRng64::core","value":"R","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" The *core* part of the RNG, implementing the `generate` function.\n","sig":null,"attributes":[{"value":"/ The *core* part of the RNG, implementing the `generate` function.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29720,"byte_end":29789,"line_start":284,"line_end":284,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30471,"byte_end":30474,"line_start":304,"line_end":304,"column_start":12,"column_end":15},"name":"new","qualname":"<BlockRng64<R>>::new","value":"pub fn new(R) -> BlockRng64<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BlockRng` from an existing RNG implementing\n `BlockRngCore`. Results will be generated on first use.\n","sig":null,"attributes":[{"value":"/ Create a new `BlockRng` from an existing RNG implementing","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30320,"byte_end":30381,"line_start":301,"line_end":301,"column_start":5,"column_end":66}},{"value":"/ `BlockRngCore`. Results will be generated on first use.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30386,"byte_end":30445,"line_start":302,"line_end":302,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30450,"byte_end":30459,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30984,"byte_end":30989,"line_start":320,"line_end":320,"column_start":12,"column_end":17},"name":"index","qualname":"<BlockRng64<R>>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the index into the result buffer.","sig":null,"attributes":[{"value":"/ Get the index into the result buffer.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30729,"byte_end":30770,"line_start":314,"line_end":314,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30775,"byte_end":30778,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If this is equal to or larger than the size of the result buffer then","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30783,"byte_end":30856,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ the buffer is \"empty\" and `generate()` must be called to produce new","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30861,"byte_end":30933,"line_start":317,"line_end":317,"column_start":5,"column_end":77}},{"value":"/ results.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30938,"byte_end":30950,"line_start":318,"line_end":318,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30955,"byte_end":30972,"line_start":319,"line_end":319,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31180,"byte_end":31185,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"reset","qualname":"<BlockRng64<R>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the number of available results.\n This will force a new set of results to be generated on next use.\n","sig":null,"attributes":[{"value":"/ Reset the number of available results.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31038,"byte_end":31080,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/ This will force a new set of results to be generated on next use.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31085,"byte_end":31154,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31159,"byte_end":31168,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31410,"byte_end":31426,"line_start":335,"line_end":335,"column_start":12,"column_end":28},"name":"generate_and_set","qualname":"<BlockRng64<R>>::generate_and_set","value":"pub fn generate_and_set(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Generate a new set of results immediately, setting the index to the\n given value.\n","sig":null,"attributes":[{"value":"/ Generate a new set of results immediately, setting the index to the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31292,"byte_end":31363,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/ given value.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31368,"byte_end":31384,"line_start":333,"line_end":333,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31389,"byte_end":31398,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":34893,"byte_end":34898,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" Error type of random number generators","sig":null,"attributes":[{"value":"/ Error type of random number generators","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":34626,"byte_end":34668,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":34669,"byte_end":34672,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In order to be compatible with `std` and `no_std`, this type has two","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":34673,"byte_end":34745,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ possible implementations: with `std` a boxed `Error` trait object is stored,","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":34746,"byte_end":34826,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ while with `no_std` we merely store an error code.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":34827,"byte_end":34881,"line_start":20,"line_end":20,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":80},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35506,"byte_end":35518,"line_start":36,"line_end":36,"column_start":15,"column_end":27},"name":"CUSTOM_START","qualname":"::error::Error::CUSTOM_START","value":"u32","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Codes at or above this point can be used by users to define their own\n custom errors.","sig":null,"attributes":[{"value":"/ Codes at or above this point can be used by users to define their own","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35067,"byte_end":35140,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ custom errors.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35145,"byte_end":35163,"line_start":30,"line_end":30,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35168,"byte_end":35171,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This has a fixed value of `(1 << 31) + (1 << 30) = 0xC000_0000`,","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35176,"byte_end":35244,"line_start":32,"line_end":32,"column_start":5,"column_end":73}},{"value":"/ therefore the number of values available for custom codes is `1 << 30`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35249,"byte_end":35324,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35329,"byte_end":35332,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is identical to [`getrandom::Error::CUSTOM_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.CUSTOM_START).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35337,"byte_end":35491,"line_start":35,"line_end":35,"column_start":5,"column_end":159}}]},{"kind":"Const","id":{"krate":0,"index":81},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35952,"byte_end":35966,"line_start":42,"line_end":42,"column_start":15,"column_end":29},"name":"INTERNAL_START","qualname":"::error::Error::INTERNAL_START","value":"u32","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Codes below this point represent OS Errors (i.e. positive i32 values).\n Codes at or above this point, but below [`Error::CUSTOM_START`] are\n reserved for use by the `rand` and `getrandom` crates.","sig":null,"attributes":[{"value":"/ Codes below this point represent OS Errors (i.e. positive i32 values).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35553,"byte_end":35627,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ Codes at or above this point, but below [`Error::CUSTOM_START`] are","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35632,"byte_end":35703,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ reserved for use by the `rand` and `getrandom` crates.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35708,"byte_end":35766,"line_start":39,"line_end":39,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35771,"byte_end":35774,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This is identical to [`getrandom::Error::INTERNAL_START`](https://docs.rs/getrandom/latest/getrandom/struct.Error.html#associatedconstant.INTERNAL_START).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35779,"byte_end":35937,"line_start":41,"line_end":41,"column_start":5,"column_end":163}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36299,"byte_end":36302,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new<E>(E) -> Self where\nE: Into<Box<std::error::Error + Send + Sync + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Construct from any type supporting `std::error::Error`","sig":null,"attributes":[{"value":"/ Construct from any type supporting `std::error::Error`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35988,"byte_end":36046,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36051,"byte_end":36054,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Available only when configured with `std`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36059,"byte_end":36105,"line_start":46,"line_end":46,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36110,"byte_end":36113,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ See also `From<NonZeroU32>`, which is available with and without `std`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36118,"byte_end":36193,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36198,"byte_end":36221,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36278,"byte_end":36287,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36750,"byte_end":36755,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"inner","qualname":"<Error>::inner","value":"pub fn inner(&Self) -> &std::error::Error + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reference the inner error (`std` only)","sig":null,"attributes":[{"value":"/ Reference the inner error (`std` only)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36454,"byte_end":36496,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36501,"byte_end":36504,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ When configured with `std`, this is a trivial operation and never","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36509,"byte_end":36578,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ panics. Without `std`, this method is simply unavailable.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36583,"byte_end":36644,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36649,"byte_end":36672,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36729,"byte_end":36738,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37142,"byte_end":37152,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"take_inner","qualname":"<Error>::take_inner","value":"pub fn take_inner(Self) -> Box<std::error::Error + Send + Sync + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the inner error (`std` only)","sig":null,"attributes":[{"value":"/ Unwrap the inner error (`std` only)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36849,"byte_end":36888,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36893,"byte_end":36896,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ When configured with `std`, this is a trivial operation and never","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36901,"byte_end":36970,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ panics. Without `std`, this method is simply unavailable.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":36975,"byte_end":37036,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37041,"byte_end":37064,"line_start":74,"line_end":74,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37121,"byte_end":37130,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37577,"byte_end":37589,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"raw_os_error","qualname":"<Error>::raw_os_error","value":"pub fn raw_os_error(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Extract the raw OS error code (if this error came from the OS)","sig":null,"attributes":[{"value":"/ Extract the raw OS error code (if this error came from the OS)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37245,"byte_end":37311,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37316,"byte_end":37319,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method is identical to `std::io::Error::raw_os_error()`, except","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37324,"byte_end":37396,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that it works in `no_std` contexts. If this method returns `None`, the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37401,"byte_end":37475,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ error value can still be formatted via the `Diplay` implementation.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37480,"byte_end":37551,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37556,"byte_end":37565,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38251,"byte_end":38255,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"code","qualname":"<Error>::code","value":"pub fn code(&Self) -> Option<NonZeroU32>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the error code, if any.","sig":null,"attributes":[{"value":"/ Retrieve the error code, if any.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":37966,"byte_end":38002,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38007,"byte_end":38010,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If this `Error` was constructed via `From<NonZeroU32>`, then this method","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38015,"byte_end":38091,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ will return this `NonZeroU32` code (for `no_std` this is always the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38096,"byte_end":38167,"line_start":103,"line_end":103,"column_start":5,"column_end":76}},{"value":"/ case). Otherwise, this method will return `None`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38172,"byte_end":38225,"line_start":104,"line_end":104,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38230,"byte_end":38239,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"impls","qualname":"::impls","value":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" Helper functions for implementing `RngCore` functions.","sig":null,"attributes":[{"value":"/ Helper functions for implementing `RngCore` functions.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41592,"byte_end":41650,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41651,"byte_end":41654,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ For cross-platform reproducibility, these functions all use Little Endian:","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41655,"byte_end":41733,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ least-significant part first. For example, `next_u64_via_u32` takes `u32`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41734,"byte_end":41811,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ values `x, y`, then outputs `(y << 32) | x`. To implement `next_u32`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41812,"byte_end":41884,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ from `next_u64` in little-endian order, one should use `next_u64() as u32`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41885,"byte_end":41964,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41965,"byte_end":41968,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Byte-swapping (like the std `to_le` functions) is only needed to convert","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":41969,"byte_end":42045,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ to/from byte sequences, and since its purpose is reproducibility,","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42046,"byte_end":42115,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ non-reproducible sources (e.g. `OsRng`) need not bother with it.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42116,"byte_end":42184,"line_start":18,"line_end":18,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42296,"byte_end":42312,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"next_u64_via_u32","qualname":"::impls::next_u64_via_u32","value":"pub fn next_u64_via_u32<R: RngCore + ?Sized>(&mut R) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Implement `next_u64` via `next_u32`, little-endian order.\n","sig":null,"attributes":[{"value":"/ Implement `next_u64` via `next_u32`, little-endian order.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42227,"byte_end":42288,"line_start":23,"line_end":23,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42859,"byte_end":42878,"line_start":37,"line_end":37,"column_start":8,"column_end":27},"name":"fill_bytes_via_next","qualname":"::impls::fill_bytes_via_next","value":"pub fn fill_bytes_via_next<R: RngCore + ?Sized>(&mut R, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.","sig":null,"attributes":[{"value":"/ Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42520,"byte_end":42598,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42599,"byte_end":42602,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The fastest way to fill a slice is usually to work as long as possible with","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42603,"byte_end":42682,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ integers. That is why this method mostly uses `next_u64`, and only when","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42683,"byte_end":42758,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ there are 4 or less bytes remaining at the end of the slice it uses","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42759,"byte_end":42830,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ `next_u32` once.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":42831,"byte_end":42851,"line_start":36,"line_end":36,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45445,"byte_end":45464,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"fill_via_u32_chunks","qualname":"::impls::fill_via_u32_chunks","value":"pub fn fill_via_u32_chunks(&[u32], &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Implement `fill_bytes` by reading chunks from the output buffer of a block\n based RNG.","sig":null,"attributes":[{"value":"/ Implement `fill_bytes` by reading chunks from the output buffer of a block","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44505,"byte_end":44583,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ based RNG.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44584,"byte_end":44598,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44599,"byte_end":44602,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The return values are `(consumed_u32, filled_u8)`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44603,"byte_end":44657,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44658,"byte_end":44661,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ `filled_u8` is the number of filled bytes in `dest`, which may be less than","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44662,"byte_end":44741,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ the length of `dest`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44742,"byte_end":44767,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/ `consumed_u32` is the number of words consumed from `src`, which is the same","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44768,"byte_end":44848,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ as `filled_u8 / 4` rounded up.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44849,"byte_end":44883,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44884,"byte_end":44887,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44888,"byte_end":44901,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/ (from `IsaacRng`)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44902,"byte_end":44923,"line_start":98,"line_end":98,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44924,"byte_end":44927,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44928,"byte_end":44941,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/ fn fill_bytes(&mut self, dest: &mut [u8]) {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44942,"byte_end":44989,"line_start":101,"line_end":101,"column_start":1,"column_end":48}},{"value":"/     let mut read_len = 0;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":44990,"byte_end":45019,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/     while read_len < dest.len() {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45020,"byte_end":45057,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/         if self.index >= self.rsl.len() {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45058,"byte_end":45103,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/             self.isaac();","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45104,"byte_end":45133,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/         }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45134,"byte_end":45147,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45148,"byte_end":45151,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/         let (consumed_u32, filled_u8) =","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45152,"byte_end":45195,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/             impls::fill_via_u32_chunks(&mut self.rsl[self.index..],","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45196,"byte_end":45267,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/                                        &mut dest[read_len..]);","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45268,"byte_end":45334,"line_start":110,"line_end":110,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45335,"byte_end":45338,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         self.index += consumed_u32;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45339,"byte_end":45378,"line_start":112,"line_end":112,"column_start":1,"column_end":40}},{"value":"/         read_len += filled_u8;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45379,"byte_end":45413,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45414,"byte_end":45423,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45424,"byte_end":45429,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45430,"byte_end":45437,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45987,"byte_end":46006,"line_start":131,"line_end":131,"column_start":8,"column_end":27},"name":"fill_via_u64_chunks","qualname":"::impls::fill_via_u64_chunks","value":"pub fn fill_via_u64_chunks(&[u64], &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Implement `fill_bytes` by reading chunks from the output buffer of a block\n based RNG.","sig":null,"attributes":[{"value":"/ Implement `fill_bytes` by reading chunks from the output buffer of a block","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45555,"byte_end":45633,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ based RNG.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45634,"byte_end":45648,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45649,"byte_end":45652,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The return values are `(consumed_u64, filled_u8)`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45653,"byte_end":45707,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/ `filled_u8` is the number of filled bytes in `dest`, which may be less than","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45708,"byte_end":45787,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ the length of `dest`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45788,"byte_end":45813,"line_start":126,"line_end":126,"column_start":1,"column_end":26}},{"value":"/ `consumed_u64` is the number of words consumed from `src`, which is the same","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45814,"byte_end":45894,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ as `filled_u8 / 8` rounded up.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45895,"byte_end":45929,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45930,"byte_end":45933,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ See `fill_via_u32_chunks` for an example.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":45934,"byte_end":45979,"line_start":130,"line_end":130,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":46168,"byte_end":46185,"line_start":136,"line_end":136,"column_start":8,"column_end":25},"name":"next_u32_via_fill","qualname":"::impls::next_u32_via_fill","value":"pub fn next_u32_via_fill<R: RngCore + ?Sized>(&mut R) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Implement `next_u32` via `fill_bytes`, little-endian order.\n","sig":null,"attributes":[{"value":"/ Implement `next_u32` via `fill_bytes`, little-endian order.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":46097,"byte_end":46160,"line_start":135,"line_end":135,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":46387,"byte_end":46404,"line_start":143,"line_end":143,"column_start":8,"column_end":25},"name":"next_u64_via_fill","qualname":"::impls::next_u64_via_fill","value":"pub fn next_u64_via_fill<R: RngCore + ?Sized>(&mut R) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Implement `next_u64` via `fill_bytes`, little-endian order.\n","sig":null,"attributes":[{"value":"/ Implement `next_u64` via `fill_bytes`, little-endian order.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/impls.rs","byte_start":46316,"byte_end":46379,"line_start":142,"line_end":142,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"le","qualname":"::le","value":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" Little-Endian utilities","sig":null,"attributes":[{"value":"/ Little-Endian utilities","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48043,"byte_end":48070,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48071,"byte_end":48074,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Little-Endian order has been chosen for internal usage; this makes some","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48075,"byte_end":48150,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ useful functions available.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48151,"byte_end":48182,"line_start":12,"line_end":12,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":125},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48288,"byte_end":48301,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"read_u32_into","qualname":"::le::read_u32_into","value":"pub fn read_u32_into(&[u8], &mut [u32])","parent":null,"children":[],"decl_id":null,"docs":" Reads unsigned 32 bit integers from `src` into `dst`.\n","sig":null,"attributes":[{"value":"/ Reads unsigned 32 bit integers from `src` into `dst`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48213,"byte_end":48270,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48271,"byte_end":48280,"line_start":17,"line_end":17,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48586,"byte_end":48599,"line_start":27,"line_end":27,"column_start":8,"column_end":21},"name":"read_u64_into","qualname":"::le::read_u64_into","value":"pub fn read_u64_into(&[u8], &mut [u64])","parent":null,"children":[],"decl_id":null,"docs":" Reads unsigned 64 bit integers from `src` into `dst`.\n","sig":null,"attributes":[{"value":"/ Reads unsigned 64 bit integers from `src` into `dst`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48511,"byte_end":48568,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/le.rs","byte_start":48569,"byte_end":48578,"line_start":26,"line_end":26,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51303,"byte_end":51308,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"OsRng","qualname":"::os::OsRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that retrieves randomness from the\n operating system.","sig":null,"attributes":[{"value":"/ A random number generator that retrieves randomness from the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":49995,"byte_end":50059,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ operating system.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50060,"byte_end":50081,"line_start":15,"line_end":15,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50082,"byte_end":50085,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is a zero-sized struct. It can be freely constructed with `OsRng`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50086,"byte_end":50161,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50162,"byte_end":50165,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The implementation is provided by the [getrandom] crate. Refer to","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50166,"byte_end":50235,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ [getrandom] documentation for details.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50236,"byte_end":50278,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50279,"byte_end":50282,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This struct is only available when specifying the crate feature `getrandom`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50283,"byte_end":50362,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ or `std`. When using the `rand` lib, it is also available as `rand::rngs::OsRng`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50363,"byte_end":50448,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50449,"byte_end":50452,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Blocking and error handling","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50453,"byte_end":50486,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50487,"byte_end":50490,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ It is possible that when used during early boot the first call to `OsRng`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50491,"byte_end":50568,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will block until the system's RNG is initialised. It is also possible","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50569,"byte_end":50642,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ (though highly unlikely) for `OsRng` to fail on some platforms, most","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50643,"byte_end":50715,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ likely due to system mis-configuration.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50716,"byte_end":50759,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50760,"byte_end":50763,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ After the first successful call, it is highly unlikely that failures or","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50764,"byte_end":50839,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ significant delays will occur (although performance should be expected to","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50840,"byte_end":50917,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ be much slower than a user-space PRNG).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50918,"byte_end":50961,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50962,"byte_end":50965,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50966,"byte_end":50985,"line_start":36,"line_end":36,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50986,"byte_end":50993,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use rand_core::{RngCore, OsRng};","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":50994,"byte_end":51030,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51031,"byte_end":51034,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut key = [0u8; 16];","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51035,"byte_end":51063,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"/ OsRng.fill_bytes(&mut key);","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51064,"byte_end":51095,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/ let random_u64 = OsRng.next_u64();","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51096,"byte_end":51134,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51135,"byte_end":51142,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51143,"byte_end":51146,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [getrandom]: https://crates.io/crates/getrandom","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51147,"byte_end":51198,"line_start":45,"line_end":45,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":140},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5248,"byte_end":5255,"line_start":137,"line_end":137,"column_start":11,"column_end":18},"name":"RngCore","qualname":"::RngCore","value":"RngCore","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" The core of a random number generator.","sig":null,"attributes":[{"value":"/ The core of a random number generator.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1921,"byte_end":1963,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1964,"byte_end":1967,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This trait encapsulates the low-level functionality common to all","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1968,"byte_end":2037,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ generators, and is the \"back end\", to be implemented by generators.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2038,"byte_end":2109,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ End users should normally use the `Rng` trait from the [`rand`] crate,","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2110,"byte_end":2184,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ which is automatically implemented for every type implementing `RngCore`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2185,"byte_end":2262,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2263,"byte_end":2266,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Three different methods for generating random data are provided since the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2267,"byte_end":2344,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ optimal implementation of each is dependent on the type of generator. There","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2345,"byte_end":2424,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ is no required relationship between the output of each; e.g. many","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2425,"byte_end":2494,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/ implementations of [`fill_bytes`] consume a whole number of `u32` or `u64`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2495,"byte_end":2573,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ values and drop any remaining unused bytes. The same can happen with the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2574,"byte_end":2650,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ [`next_u32`] and [`next_u64`] methods, implementations may discard some","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2651,"byte_end":2726,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ random bits for efficiency.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2727,"byte_end":2758,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2759,"byte_end":2762,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The [`try_fill_bytes`] method is a variant of [`fill_bytes`] allowing error","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2763,"byte_end":2842,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ handling; it is not deemed sufficiently useful to add equivalents for","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2843,"byte_end":2916,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ [`next_u32`] or [`next_u64`] since the latter methods are almost always used","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2917,"byte_end":2997,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ with algorithmic generators (PRNGs), which are normally infallible.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":2998,"byte_end":3069,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3070,"byte_end":3073,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Algorithmic generators implementing [`SeedableRng`] should normally have","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3074,"byte_end":3150,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ *portable, reproducible* output, i.e. fix Endianness when converting values","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3151,"byte_end":3230,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ to avoid platform differences, and avoid making any changes which affect","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3231,"byte_end":3307,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ output (except by communicating that the release has breaking changes).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3308,"byte_end":3383,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3384,"byte_end":3387,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Typically implementators will implement only one of the methods available","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3388,"byte_end":3465,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ in this trait directly, then use the helper functions from the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3466,"byte_end":3532,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/ [`impls`] module to implement the other methods.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3533,"byte_end":3585,"line_start":86,"line_end":86,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3586,"byte_end":3589,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ It is recommended that implementations also implement:","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3590,"byte_end":3648,"line_start":88,"line_end":88,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3649,"byte_end":3652,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - `Debug` with a custom implementation which *does not* print any internal","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3653,"byte_end":3731,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/   state (at least, [`CryptoRng`]s should not risk leaking state through","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3732,"byte_end":3807,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/   `Debug`).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3808,"byte_end":3823,"line_start":92,"line_end":92,"column_start":1,"column_end":16}},{"value":"/ - `Serialize` and `Deserialize` (from Serde), preferably making Serde","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3824,"byte_end":3897,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/   support optional at the crate level in PRNG libs.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3898,"byte_end":3953,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/ - `Clone`, if possible.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3954,"byte_end":3981,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/ - *never* implement `Copy` (accidental copies may cause repeated values).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":3982,"byte_end":4059,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ - *do not* implement `Default` for pseudorandom generators, but instead","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4060,"byte_end":4135,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/   implement [`SeedableRng`], to guide users towards proper seeding.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4136,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":72}},{"value":"/   External / hardware RNGs can choose to implement `Default`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4208,"byte_end":4273,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ - `Eq` and `PartialEq` could be implemented, but are probably not useful.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4274,"byte_end":4351,"line_start":100,"line_end":100,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4352,"byte_end":4355,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4356,"byte_end":4369,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4370,"byte_end":4373,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ A simple example, obviously not generating very *random* output:","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4374,"byte_end":4442,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4443,"byte_end":4446,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4447,"byte_end":4454,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ #![allow(dead_code)]","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4455,"byte_end":4479,"line_start":107,"line_end":107,"column_start":1,"column_end":25}},{"value":"/ use rand_core::{RngCore, Error, impls};","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4480,"byte_end":4523,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4524,"byte_end":4527,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ struct CountingRng(u64);","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4528,"byte_end":4556,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4557,"byte_end":4560,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ impl RngCore for CountingRng {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4561,"byte_end":4595,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/     fn next_u32(&mut self) -> u32 {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4596,"byte_end":4635,"line_start":113,"line_end":113,"column_start":1,"column_end":40}},{"value":"/         self.next_u64() as u32","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4636,"byte_end":4670,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4671,"byte_end":4680,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4681,"byte_end":4684,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     fn next_u64(&mut self) -> u64 {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4685,"byte_end":4724,"line_start":117,"line_end":117,"column_start":1,"column_end":40}},{"value":"/         self.0 += 1;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4725,"byte_end":4749,"line_start":118,"line_end":118,"column_start":1,"column_end":25}},{"value":"/         self.0","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4750,"byte_end":4768,"line_start":119,"line_end":119,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4769,"byte_end":4778,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4779,"byte_end":4782,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/     fn fill_bytes(&mut self, dest: &mut [u8]) {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4783,"byte_end":4834,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/         impls::fill_bytes_via_next(self, dest)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4835,"byte_end":4885,"line_start":123,"line_end":123,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4886,"byte_end":4895,"line_start":124,"line_end":124,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4896,"byte_end":4899,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/     fn try_fill_bytes(&mut self, dest: &mut [u8]) -> Result<(), Error> {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4900,"byte_end":4976,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/         Ok(self.fill_bytes(dest))","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":4977,"byte_end":5014,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5015,"byte_end":5024,"line_start":128,"line_end":128,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5025,"byte_end":5030,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5031,"byte_end":5038,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`rand`]: https://docs.rs/rand","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5043,"byte_end":5077,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ [`try_fill_bytes`]: RngCore::try_fill_bytes","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5078,"byte_end":5125,"line_start":133,"line_end":133,"column_start":1,"column_end":48}},{"value":"/ [`fill_bytes`]: RngCore::fill_bytes","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5126,"byte_end":5165,"line_start":134,"line_end":134,"column_start":1,"column_end":40}},{"value":"/ [`next_u32`]: RngCore::next_u32","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5166,"byte_end":5201,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/ [`next_u64`]: RngCore::next_u64","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5202,"byte_end":5237,"line_start":136,"line_end":136,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5544,"byte_end":5552,"line_start":143,"line_end":143,"column_start":8,"column_end":16},"name":"next_u32","qualname":"::RngCore::next_u32","value":"pub fn next_u32(&mut Self) -> u32","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Return the next random `u32`.","sig":null,"attributes":[{"value":"/ Return the next random `u32`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5262,"byte_end":5295,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5300,"byte_end":5303,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ RNGs must implement at least one method from this trait directly. In","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5308,"byte_end":5380,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ the case this method is not implemented directly, it can be implemented","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5385,"byte_end":5460,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ using `self.next_u64() as u32` or via [`impls::next_u32_via_fill`].","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5465,"byte_end":5536,"line_start":142,"line_end":142,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5860,"byte_end":5868,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"next_u64","qualname":"::RngCore::next_u64","value":"pub fn next_u64(&mut Self) -> u64","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Return the next random `u64`.","sig":null,"attributes":[{"value":"/ Return the next random `u64`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5577,"byte_end":5610,"line_start":145,"line_end":145,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5615,"byte_end":5618,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ RNGs must implement at least one method from this trait directly. In","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5623,"byte_end":5695,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ the case this method is not implemented directly, it can be implemented","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5700,"byte_end":5775,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ via [`impls::next_u64_via_u32`] or via [`impls::next_u64_via_fill`].","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5780,"byte_end":5852,"line_start":149,"line_end":149,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6616,"byte_end":6626,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"fill_bytes","qualname":"::RngCore::fill_bytes","value":"pub fn fill_bytes(&mut Self, &mut [u8])","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Fill `dest` with random data.","sig":null,"attributes":[{"value":"/ Fill `dest` with random data.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5893,"byte_end":5926,"line_start":152,"line_end":152,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5931,"byte_end":5934,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ RNGs must implement at least one method from this trait directly. In","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":5939,"byte_end":6011,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ the case this method is not implemented directly, it can be implemented","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6016,"byte_end":6091,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ via [`impls::fill_bytes_via_next`] or","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6096,"byte_end":6137,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ via [`RngCore::try_fill_bytes`]; if this generator can","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6142,"byte_end":6200,"line_start":157,"line_end":157,"column_start":5,"column_end":63}},{"value":"/ fail the implementation must choose how best to handle errors here","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6205,"byte_end":6275,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ (e.g. panic with a descriptive message or log a warning and retry a few","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6280,"byte_end":6355,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ times).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6360,"byte_end":6371,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6376,"byte_end":6379,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This method should guarantee that `dest` is entirely filled","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6384,"byte_end":6447,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ with new data, and may panic if this is impossible","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6452,"byte_end":6506,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/ (e.g. reading past the end of a file that is being used as the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6511,"byte_end":6577,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ source of randomness).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6582,"byte_end":6608,"line_start":165,"line_end":165,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7310,"byte_end":7324,"line_start":179,"line_end":179,"column_start":8,"column_end":22},"name":"try_fill_bytes","qualname":"::RngCore::try_fill_bytes","value":"pub fn try_fill_bytes(&mut Self, &mut [u8]) -> Result<(), Error>","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Fill `dest` entirely with random data.","sig":null,"attributes":[{"value":"/ Fill `dest` entirely with random data.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6661,"byte_end":6703,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6708,"byte_end":6711,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This is the only method which allows an RNG to report errors while","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6716,"byte_end":6786,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ generating random data thus making this the primary method implemented","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6791,"byte_end":6865,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ by external (true) RNGs (e.g. `OsRng`) which can fail. It may be used","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6870,"byte_end":6943,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ directly to generate keys and to seed (infallible) PRNGs.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":6948,"byte_end":7009,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7014,"byte_end":7017,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Other than error handling, this method is identical to [`RngCore::fill_bytes`];","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7022,"byte_end":7105,"line_start":175,"line_end":175,"column_start":5,"column_end":88}},{"value":"/ thus this may be implemented using `Ok(self.fill_bytes(dest))` or","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7110,"byte_end":7179,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ `fill_bytes` may be implemented with","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7184,"byte_end":7224,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ `self.try_fill_bytes(dest).unwrap()` or more specific error handling.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7229,"byte_end":7302,"line_start":178,"line_end":178,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8613,"byte_end":8622,"line_start":204,"line_end":204,"column_start":11,"column_end":20},"name":"CryptoRng","qualname":"::CryptoRng","value":"CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`]\n implementation is supposed to be cryptographically secure.","sig":null,"attributes":[{"value":"/ A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`]","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7378,"byte_end":7453,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ implementation is supposed to be cryptographically secure.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7454,"byte_end":7516,"line_start":183,"line_end":183,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7517,"byte_end":7520,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ *Cryptographically secure generators*, also known as *CSPRNGs*, should","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7521,"byte_end":7595,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/ satisfy an additional properties over other generators: given the first","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7596,"byte_end":7671,"line_start":186,"line_end":186,"column_start":1,"column_end":76}},{"value":"/ *k* bits of an algorithm's output","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7672,"byte_end":7709,"line_start":187,"line_end":187,"column_start":1,"column_end":38}},{"value":"/ sequence, it should not be possible using polynomial-time algorithms to","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7710,"byte_end":7785,"line_start":188,"line_end":188,"column_start":1,"column_end":76}},{"value":"/ predict the next bit with probability significantly greater than 50%.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7786,"byte_end":7859,"line_start":189,"line_end":189,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7860,"byte_end":7863,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Some generators may satisfy an additional property, however this is not","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7864,"byte_end":7939,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/ required by this trait: if the CSPRNG's state is revealed, it should not be","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":7940,"byte_end":8019,"line_start":192,"line_end":192,"column_start":1,"column_end":80}},{"value":"/ computationally-feasible to reconstruct output prior to this. Some other","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8020,"byte_end":8096,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ generators allow backwards-computation and are consided *reversible*.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8097,"byte_end":8170,"line_start":194,"line_end":194,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8171,"byte_end":8174,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Note that this trait is provided for guidance only and cannot guarantee","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8175,"byte_end":8250,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/ suitability for cryptographic applications. In general it should only be","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8251,"byte_end":8327,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ implemented for well-reviewed code implementing well-regarded algorithms.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8328,"byte_end":8405,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8406,"byte_end":8409,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Note also that use of a `CryptoRng` does not protect against other","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8410,"byte_end":8480,"line_start":200,"line_end":200,"column_start":1,"column_end":71}},{"value":"/ weaknesses such as seeding from a weak entropy source or leaking state.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8481,"byte_end":8556,"line_start":201,"line_end":201,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8557,"byte_end":8560,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ [`BlockRngCore`]: block::BlockRngCore","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8561,"byte_end":8602,"line_start":203,"line_end":203,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":146},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8883,"byte_end":8894,"line_start":212,"line_end":212,"column_start":11,"column_end":22},"name":"SeedableRng","qualname":"::SeedableRng","value":"SeedableRng: Sized","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":154},{"krate":0,"index":156}],"decl_id":null,"docs":" A random number generator that can be explicitly seeded.","sig":null,"attributes":[{"value":"/ A random number generator that can be explicitly seeded.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8627,"byte_end":8687,"line_start":206,"line_end":206,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8688,"byte_end":8691,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ This trait encapsulates the low-level functionality common to all","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8692,"byte_end":8761,"line_start":208,"line_end":208,"column_start":1,"column_end":70}},{"value":"/ pseudo-random number generators (PRNGs, or algorithmic generators).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8762,"byte_end":8833,"line_start":209,"line_end":209,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8834,"byte_end":8837,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [`rand`]: https://docs.rs/rand","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8838,"byte_end":8872,"line_start":211,"line_end":211,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":147},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10412,"byte_end":10416,"line_start":258,"line_end":258,"column_start":10,"column_end":14},"name":"Seed","qualname":"::SeedableRng::Seed","value":"type Seed: Sized + Default + AsMut<[u8]>;","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Seed type, which is restricted to types mutably-dereferencable as `u8`\n arrays (we recommend `[u8; N]` for some `N`).","sig":null,"attributes":[{"value":"/ Seed type, which is restricted to types mutably-dereferencable as `u8`","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8908,"byte_end":8982,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ arrays (we recommend `[u8; N]` for some `N`).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8987,"byte_end":9036,"line_start":214,"line_end":214,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9041,"byte_end":9044,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ It is recommended to seed PRNGs with a seed of at least circa 100 bits,","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9049,"byte_end":9124,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ which means an array of `[u8; 12]` or greater to avoid picking RNGs with","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9129,"byte_end":9205,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ partially overlapping periods.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9210,"byte_end":9244,"line_start":218,"line_end":218,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9249,"byte_end":9252,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ For cryptographic RNG's a seed of 256 bits is recommended, `[u8; 32]`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9257,"byte_end":9331,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9336,"byte_end":9339,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9344,"byte_end":9347,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Implementing `SeedableRng` for RNGs with large seeds","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9352,"byte_end":9410,"line_start":223,"line_end":223,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9415,"byte_end":9418,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that the required traits `core::default::Default` and","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9423,"byte_end":9485,"line_start":225,"line_end":225,"column_start":5,"column_end":67}},{"value":"/ `core::convert::AsMut<u8>` are not implemented for large arrays","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9490,"byte_end":9557,"line_start":226,"line_end":226,"column_start":5,"column_end":72}},{"value":"/ `[u8; N]` with `N` > 32. To be able to implement the traits required by","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9562,"byte_end":9637,"line_start":227,"line_end":227,"column_start":5,"column_end":80}},{"value":"/ `SeedableRng` for RNGs with such large seeds, the newtype pattern can be","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9642,"byte_end":9718,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ used:","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9723,"byte_end":9732,"line_start":229,"line_end":229,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9737,"byte_end":9740,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9745,"byte_end":9752,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use rand_core::SeedableRng;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9757,"byte_end":9788,"line_start":232,"line_end":232,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9793,"byte_end":9796,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ const N: usize = 64;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9801,"byte_end":9825,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/ pub struct MyRngSeed(pub [u8; N]);","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9830,"byte_end":9868,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/ pub struct MyRng(MyRngSeed);","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9873,"byte_end":9905,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9910,"byte_end":9913,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ impl Default for MyRngSeed {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9918,"byte_end":9950,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     fn default() -> MyRngSeed {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9955,"byte_end":9990,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/         MyRngSeed([0; N])","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":9995,"byte_end":10024,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10029,"byte_end":10038,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10043,"byte_end":10048,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10053,"byte_end":10056,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ impl AsMut<[u8]> for MyRngSeed {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10061,"byte_end":10097,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/     fn as_mut(&mut self) -> &mut [u8] {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10102,"byte_end":10145,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/         &mut self.0","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10150,"byte_end":10173,"line_start":246,"line_end":246,"column_start":5,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10178,"byte_end":10187,"line_start":247,"line_end":247,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10192,"byte_end":10197,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10202,"byte_end":10205,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ impl SeedableRng for MyRng {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10210,"byte_end":10242,"line_start":250,"line_end":250,"column_start":5,"column_end":37}},{"value":"/     type Seed = MyRngSeed;","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10247,"byte_end":10277,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10282,"byte_end":10285,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     fn from_seed(seed: MyRngSeed) -> MyRng {","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10290,"byte_end":10338,"line_start":253,"line_end":253,"column_start":5,"column_end":53}},{"value":"/         MyRng(seed)","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10343,"byte_end":10366,"line_start":254,"line_end":254,"column_start":5,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10371,"byte_end":10380,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10385,"byte_end":10390,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10395,"byte_end":10402,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11998,"byte_end":12007,"line_start":285,"line_end":285,"column_start":8,"column_end":17},"name":"from_seed","qualname":"::SeedableRng::from_seed","value":"pub fn from_seed(Self::Seed) -> Self","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Create a new PRNG using the given seed.","sig":null,"attributes":[{"value":"/ Create a new PRNG using the given seed.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10454,"byte_end":10497,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10502,"byte_end":10505,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ PRNG implementations are allowed to assume that bits in the seed are","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10510,"byte_end":10582,"line_start":262,"line_end":262,"column_start":5,"column_end":77}},{"value":"/ well distributed. That means usually that the number of one and zero","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10587,"byte_end":10659,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ bits are roughly equal, and values like 0, 1 and (size - 1) are unlikely.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10664,"byte_end":10741,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ Note that many non-cryptographic PRNGs will show poor quality output","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10746,"byte_end":10818,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ if this is not adhered to. If you wish to seed from simple numbers, use","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10823,"byte_end":10898,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ `seed_from_u64` instead.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10903,"byte_end":10931,"line_start":267,"line_end":267,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10936,"byte_end":10939,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ All PRNG implementations should be reproducible unless otherwise noted:","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":10944,"byte_end":11019,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ given a fixed `seed`, the same sequence of output should be produced","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11024,"byte_end":11096,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ on all runs, library versions and architectures (e.g. check endianness).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11101,"byte_end":11177,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ Any \"value-breaking\" changes to the generator should require bumping at","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11182,"byte_end":11257,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ least the minor version and documentation of the change.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11262,"byte_end":11322,"line_start":273,"line_end":273,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11327,"byte_end":11330,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ It is not required that this function yield the same state as a","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11335,"byte_end":11402,"line_start":275,"line_end":275,"column_start":5,"column_end":72}},{"value":"/ reference implementation of the PRNG given equivalent seed; if necessary","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11407,"byte_end":11483,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ another constructor replicating behaviour from a reference","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11488,"byte_end":11550,"line_start":277,"line_end":277,"column_start":5,"column_end":67}},{"value":"/ implementation can be added.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11555,"byte_end":11587,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11592,"byte_end":11595,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ PRNG implementations should make sure `from_seed` never panics. In the","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11600,"byte_end":11674,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ case that some special values (like an all zero seed) are not viable","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11679,"byte_end":11751,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ seeds it is preferable to map these to alternative constant value(s),","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11756,"byte_end":11829,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ for example `0xBAD5EEDu32` or `0x0DDB1A5E5BAD5EEDu64` (\"odd biases? bad","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11834,"byte_end":11909,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ seed\"). This is assuming only a small number of values must be rejected.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":11914,"byte_end":11990,"line_start":284,"line_end":284,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12824,"byte_end":12837,"line_start":301,"line_end":301,"column_start":8,"column_end":21},"name":"seed_from_u64","qualname":"::SeedableRng::seed_from_u64","value":"pub fn seed_from_u64(u64) -> Self","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Create a new PRNG using a `u64` seed.","sig":null,"attributes":[{"value":"/ Create a new PRNG using a `u64` seed.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12040,"byte_end":12081,"line_start":287,"line_end":287,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12086,"byte_end":12089,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This is a convenience-wrapper around `from_seed` to allow construction","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12094,"byte_end":12168,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ of any `SeedableRng` from a simple `u64` value. It is designed such that","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12173,"byte_end":12249,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ low Hamming Weight numbers like 0 and 1 can be used and should still","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12254,"byte_end":12326,"line_start":291,"line_end":291,"column_start":5,"column_end":77}},{"value":"/ result in good, independent seeds to the PRNG which is returned.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12331,"byte_end":12399,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12404,"byte_end":12407,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This **is not suitable for cryptography**, as should be clear given that","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12412,"byte_end":12488,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ the input size is only 64 bits.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12493,"byte_end":12528,"line_start":295,"line_end":295,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12533,"byte_end":12536,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Implementations for PRNGs *may* provide their own implementations of","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12541,"byte_end":12613,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ this function, but the default implementation should be good enough for","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12618,"byte_end":12693,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ all purposes. *Changing* the implementation of this function should be","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12698,"byte_end":12772,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/ considered a value-breaking change.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":12777,"byte_end":12816,"line_start":300,"line_end":300,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15283,"byte_end":15291,"line_start":356,"line_end":356,"column_start":8,"column_end":16},"name":"from_rng","qualname":"::SeedableRng::from_rng","value":"pub fn from_rng<R: RngCore>(R) -> Result<Self, Error>","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Create a new PRNG seeded from another `Rng`.","sig":null,"attributes":[{"value":"/ Create a new PRNG seeded from another `Rng`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":13968,"byte_end":14016,"line_start":332,"line_end":332,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14021,"byte_end":14024,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This may be useful when needing to rapidly seed many PRNGs from a master","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14029,"byte_end":14105,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ PRNG, and to allow forking of PRNGs. It may be considered deterministic.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14110,"byte_end":14186,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14191,"byte_end":14194,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ The master PRNG should be at least as high quality as the child PRNGs.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14199,"byte_end":14273,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ When seeding non-cryptographic child PRNGs, we recommend using a","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14278,"byte_end":14346,"line_start":338,"line_end":338,"column_start":5,"column_end":73}},{"value":"/ different algorithm for the master PRNG (ideally a CSPRNG) to avoid","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14351,"byte_end":14422,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ correlations between the child PRNGs. If this is not possible (e.g.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14427,"byte_end":14498,"line_start":340,"line_end":340,"column_start":5,"column_end":76}},{"value":"/ forking using small non-crypto PRNGs) ensure that your PRNG has a good","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14503,"byte_end":14577,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ mixing function on the output or consider use of a hash function with","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14582,"byte_end":14655,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ `from_seed`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14660,"byte_end":14676,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14681,"byte_end":14684,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Note that seeding `XorShiftRng` from another `XorShiftRng` provides an","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14689,"byte_end":14763,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ extreme example of what can go wrong: the new PRNG will be a clone","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14768,"byte_end":14838,"line_start":346,"line_end":346,"column_start":5,"column_end":75}},{"value":"/ of the parent.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14843,"byte_end":14861,"line_start":347,"line_end":347,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14866,"byte_end":14869,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ PRNG implementations are allowed to assume that a good RNG is provided","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14874,"byte_end":14948,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ for seeding, and that it is cryptographically secure when appropriate.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":14953,"byte_end":15027,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ As of `rand` 0.7 / `rand_core` 0.5, implementations overriding this","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15032,"byte_end":15103,"line_start":351,"line_end":351,"column_start":5,"column_end":76}},{"value":"/ method should ensure the implementation satisfies reproducibility","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15108,"byte_end":15177,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ (in prior versions this was not required).","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15182,"byte_end":15228,"line_start":353,"line_end":353,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15233,"byte_end":15236,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [`rand`]: https://docs.rs/rand","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15241,"byte_end":15275,"line_start":355,"line_end":355,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":16137,"byte_end":16149,"line_start":378,"line_end":378,"column_start":8,"column_end":20},"name":"from_entropy","qualname":"::SeedableRng::from_entropy","value":"pub fn from_entropy() -> Self","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Creates a new instance of the RNG seeded via [`getrandom`].","sig":null,"attributes":[{"value":"/ Creates a new instance of the RNG seeded via [`getrandom`].","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15476,"byte_end":15539,"line_start":362,"line_end":362,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15544,"byte_end":15547,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This method is the recommended way to construct non-deterministic PRNGs","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15552,"byte_end":15627,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ since it is convenient and secure.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15632,"byte_end":15670,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15675,"byte_end":15678,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ In case the overhead of using [`getrandom`] to seed *many* PRNGs is an","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15683,"byte_end":15757,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ issue, one may prefer to seed from a local PRNG, e.g.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15762,"byte_end":15819,"line_start":368,"line_end":368,"column_start":5,"column_end":62}},{"value":"/ `from_rng(thread_rng()).unwrap()`.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15824,"byte_end":15862,"line_start":369,"line_end":369,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15867,"byte_end":15870,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15875,"byte_end":15887,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15892,"byte_end":15895,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If [`getrandom`] is unable to provide secure entropy this method will panic.","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15900,"byte_end":15980,"line_start":373,"line_end":373,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15985,"byte_end":15988,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ [`getrandom`]: https://docs.rs/getrandom","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":15993,"byte_end":16037,"line_start":375,"line_end":375,"column_start":5,"column_end":49}},{"value":"cfg(feature = \"getrandom\")","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":16042,"byte_end":16071,"line_start":376,"line_end":376,"column_start":5,"column_end":34}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24571,"byte_end":24579,"line_start":125,"line_end":125,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24879,"byte_end":24887,"line_start":135,"line_end":135,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":26149,"byte_end":26157,"line_start":175,"line_end":175,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":27966,"byte_end":27974,"line_start":237,"line_end":237,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29939,"byte_end":29949,"line_start":289,"line_end":289,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30300,"byte_end":30310,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31670,"byte_end":31680,"line_start":343,"line_end":343,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":33700,"byte_end":33710,"line_start":412,"line_end":412,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":34148,"byte_end":34156,"line_start":431,"line_end":431,"column_start":49,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35055,"byte_end":35060,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38517,"byte_end":38522,"line_start":118,"line_end":118,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38986,"byte_end":38991,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":39431,"byte_end":39436,"line_start":152,"line_end":152,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":39784,"byte_end":39789,"line_start":169,"line_end":169,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40137,"byte_end":40142,"line_start":186,"line_end":186,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40319,"byte_end":40324,"line_start":194,"line_end":194,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40713,"byte_end":40722,"line_start":210,"line_end":210,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40887,"byte_end":40896,"line_start":217,"line_end":217,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51330,"byte_end":51335,"line_start":50,"line_end":50,"column_start":20,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51357,"byte_end":51362,"line_start":52,"line_end":52,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":17298,"byte_end":17301,"line_start":416,"line_end":416,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":18199,"byte_end":18202,"line_start":451,"line_end":451,"column_start":43,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1836,"byte_end":1841,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1862,"byte_end":1867,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":1877,"byte_end":1879,"line_start":55,"line_end":55,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":123}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24571,"byte_end":24579,"line_start":125,"line_end":125,"column_start":51,"column_end":59},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":177},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":24879,"byte_end":24887,"line_start":135,"line_end":135,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":26149,"byte_end":26157,"line_start":175,"line_end":175,"column_start":47,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":177},"to":{"krate":0,"index":140}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":27966,"byte_end":27974,"line_start":237,"line_end":237,"column_start":53,"column_end":61},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":177},"to":{"krate":0,"index":146}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":29939,"byte_end":29949,"line_start":289,"line_end":289,"column_start":51,"column_end":61},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":30300,"byte_end":30310,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":31670,"byte_end":31680,"line_start":343,"line_end":343,"column_start":47,"column_end":57},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":185},"to":{"krate":0,"index":140}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":33700,"byte_end":33710,"line_start":412,"line_end":412,"column_start":53,"column_end":63},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":185},"to":{"krate":0,"index":146}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/block.rs","byte_start":34148,"byte_end":34156,"line_start":431,"line_end":431,"column_start":49,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":177},"to":{"krate":0,"index":145}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":35055,"byte_end":35060,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38517,"byte_end":38522,"line_start":118,"line_end":118,"column_start":21,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":38986,"byte_end":38991,"line_start":135,"line_end":135,"column_start":23,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":6958}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":39431,"byte_end":39436,"line_start":152,"line_end":152,"column_start":27,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":39784,"byte_end":39789,"line_start":169,"line_end":169,"column_start":33,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40137,"byte_end":40142,"line_start":186,"line_end":186,"column_start":28,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":77},"to":{"krate":4,"index":1750}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40319,"byte_end":40324,"line_start":194,"line_end":194,"column_start":31,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":4,"index":2782},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40713,"byte_end":40722,"line_start":210,"line_end":210,"column_start":23,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":194},"to":{"krate":1,"index":6958}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/error.rs","byte_start":40887,"byte_end":40896,"line_start":217,"line_end":217,"column_start":28,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":194},"to":{"krate":4,"index":1750}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51330,"byte_end":51335,"line_start":50,"line_end":50,"column_start":20,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":204},"to":{"krate":0,"index":145}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/os.rs","byte_start":51357,"byte_end":51362,"line_start":52,"line_end":52,"column_start":18,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":204},"to":{"krate":0,"index":140}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":8896,"byte_end":8901,"line_start":212,"line_end":212,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":146}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":17298,"byte_end":17301,"line_start":416,"line_end":416,"column_start":39,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":140}},{"span":{"file_name":"/Users/yibopan/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_core-0.6.2/src/lib.rs","byte_start":18199,"byte_end":18202,"line_start":451,"line_end":451,"column_start":43,"column_end":46},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":145}}]}